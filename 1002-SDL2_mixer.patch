Based of https://github.com/Marisa-Chan/gweled-sdl_mixer/commit/819bede9b80860c49eb7666c163bfe42f21dd2c6
cleaned up and ported to SDL2

 configure.in    | 10 ++++----
 src/Makefile.am |  4 +--
 src/sound.c     | 79 ++++++++++++++++++++++-----------------------------------
 3 files changed, 38 insertions(+), 55 deletions(-)

diff --git a/configure.in b/configure.in
index b7b37aa..cca879b 100644
--- a/configure.in
+++ b/configure.in
@@ -36,12 +36,11 @@
 AC_SUBST(RSVG_LIBS)
 
 #### Check for mikmod.h header ####
-AC_CHECK_HEADER(mikmod.h,, AC_MSG_ERROR([libmikmod is required to compile gweled]))
-
-MIKMOD_CFLAGS=`libmikmod-config --cflags`
-MIKMOD_LIBS=`libmikmod-config --libs`
-AC_SUBST(MIKMOD_CFLAGS)
-AC_SUBST(MIKMOD_LIBS)
+PKG_CHECK_MODULES(SDLMIXER, SDL2_mixer,,
+        AC_MSG_ERROR([SDL_mixer is required to compile gweled]))
+
+AC_SUBST(SDLMIXER_CFLAGS)
+AC_SUBST(SDLMIXER_LIBS)
 
 AC_CHECK_HEADER(pthread.h, [],
                   AC_MSG_ERROR([*** Cannot find pthread.h header]))
diff --git a/src/Makefile.am b/src/Makefile.am
index 523016a..1aaaa36 100644
--- a/src/Makefile.am
+++ b/src/Makefile.am
@@ -9,7 +9,7 @@ INCLUDES = \
 AM_CFLAGS = 		  \
     @GTK_CFLAGS@      \
 	@RSVG_CFLAGS@	  \
-	@MIKMOD_CFLAGS@   \
+	@SDLMIXER_CFLAGS@   \
 	@PTHREAD_CFLAGS@
 
 bin_PROGRAMS = gweled
@@ -29,6 +29,6 @@ gweled_SOURCES = \
 	games-setgid-io.c games-setgid-io.h \
 	games-scores-dialog-private.h
 
-gweled_LDADD = @GTK_LIBS@ @RSVG_LIBS@ @MIKMOD_LIBS@ @PTHREAD_LIBS@
+gweled_LDADD = @GTK_LIBS@ @RSVG_LIBS@ @SDLMIXER_LIBS@ @PTHREAD_LIBS@
 
 
diff --git a/src/sound.c b/src/sound.c
index ea8120f..601a678 100644
--- a/src/sound.c
+++ b/src/sound.c
@@ -18,52 +18,36 @@
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
  */
 
-#include <mikmod.h>
 #include <pthread.h>
 #include <glib.h>
+#include <SDL.h>
+#include <SDL_mixer.h>
 
 #include "sound.h"
 #include "board_engine.h"
 
 static pthread_t thread;
 
-static MODULE *module;
-static SAMPLE *swap_sfx = NULL;
-static SAMPLE *click_sfx = NULL;
+static Mix_Music *module;
+static Mix_Chunk *swap_sfx = NULL;
+static Mix_Chunk *click_sfx = NULL;
 
 static gboolean is_playing;
 static gboolean sound_available;
-
-void sound_thread(void *ptr)
-{
-	while (1) {
-	    g_usleep(10000);
-		MikMod_Update();
-    }
-}
 
 void sound_init()
 {
-    /* register all the drivers */
-    MikMod_RegisterDriver(&drv_esd);
-    MikMod_RegisterDriver(&drv_alsa);
-    MikMod_RegisterDriver(&drv_oss);
-    MikMod_RegisterDriver(&drv_nos);
-
-    /* register only the s3m module loader */
-    MikMod_RegisterLoader(&load_s3m);
-
     /* initialize the library */
-    if (MikMod_Init("")) {
-        g_printerr("Could not initialize sound, reason: %s\n", MikMod_strerror(MikMod_errno));
-        MikMod_Exit();
+    if (SDL_Init(SDL_INIT_AUDIO) < 0) {
         sound_available = FALSE;
     } else {
-        sound_available = TRUE;
-        MikMod_EnableOutput();
-        pthread_create(&thread, NULL, (void *)&sound_thread, NULL);
-        g_print("Audio driver choosen: %s\n", md_driver->Name);
+        if (Mix_OpenAudio(44100, MIX_DEFAULT_FORMAT, MIX_DEFAULT_CHANNELS, 1024) >= 0)
+            sound_available = TRUE;
+        else
+            sound_available = FALSE;
     }
+    if (!sound_available)
+        g_printerr("Could not initialize sound, reason: %s\n", Mix_GetError());
 
     is_playing = FALSE;
 }
@@ -72,15 +61,14 @@ void sound_init()
 void sound_music_play()
 {
 	if (!is_playing && sound_available) {
-	    // load module
-	    module = Player_Load(DATADIR "/sounds/gweled/autonom.s3m", 64, 0);
+	    module = Mix_LoadMUS(DATADIR "/sounds/gweled/autonom.s3m");
     	if (module) {
-    	    Player_Start(module);
-			Player_SetVolume(64);
+
+    	    Mix_PlayMusic(module,-1);
 			is_playing = TRUE;
 
     	} else
-    	    g_printerr("Could not load module, reason: %s\n", MikMod_strerror(MikMod_errno));
+    	    g_printerr("Could not load module, reason: %s\n", Mix_GetError());
 	}
 }
 
@@ -89,8 +77,8 @@ void sound_music_stop()
 	if (is_playing && sound_available) {
     	if (module)
 		{
-	    	Player_Stop();
-	    	Player_Free(module);
+		    Mix_HaltMusic();
+		    Mix_FreeMusic(module);
 	    	is_playing = FALSE;
 		}
 	}
@@ -103,26 +91,25 @@ void sound_load_samples()
         return;
 
     if (!swap_sfx)
-        swap_sfx = Sample_Load(DATADIR "/sounds/gweled/swap.wav");
+        swap_sfx = Mix_LoadWAV(DATADIR "/sounds/gweled/swap.wav");
     if (!swap_sfx)
-        g_warning("Could not load swap.wav, reason: %s", MikMod_strerror(MikMod_errno));
+        g_warning("Could not load swap.wav, reason: %s", Mix_GetError());
 
     if (!click_sfx)
-        click_sfx = Sample_Load(DATADIR "/sounds/gweled/click.wav");
+        click_sfx = Mix_LoadWAV(DATADIR "/sounds/gweled/click.wav");
     if (!click_sfx)
-        g_warning("Could not load click.wav, reason: %s", MikMod_strerror(MikMod_errno));
+        g_warning("Could not load click.wav, reason: %s", Mix_GetError());
 
-    MikMod_SetNumVoices(-1, 2);
 }
 
 void sound_unload_samples()
 {
     if (swap_sfx) {
-		Sample_Free(swap_sfx);
+		Mix_FreeChunk(swap_sfx);
 		swap_sfx = NULL;
 	}
 	if (click_sfx) {
-		Sample_Free(click_sfx);
+		Mix_FreeChunk(click_sfx);
 		click_sfx = NULL;
 	}
 }
@@ -136,11 +123,11 @@ void sound_play_sample(gweled_sound_samples sample)
     switch (sample) {
         case CLICK_EVENT:
             if(click_sfx)
-                Sample_Play(click_sfx, 0, 0);
+                Mix_PlayChannel(-1,click_sfx, 0);
             break;
         case SWAP_EVENT:
             if(swap_sfx)
-                Sample_Play(swap_sfx, 0, 0);
+                Mix_PlayChannel(-1,swap_sfx, 0);
             break;
     }
 }
@@ -150,13 +137,9 @@ void sound_destroy()
     if (sound_available) {
         sound_music_stop();
 
-        pthread_cancel(thread);
-        pthread_join(thread, NULL);
-
         sound_unload_samples();
 
-        MikMod_DisableOutput();
-	    MikMod_Exit();
+        Mix_CloseAudio();
 
 	    sound_available = FALSE;
 	}
